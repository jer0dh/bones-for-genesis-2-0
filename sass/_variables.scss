
@mixin breakpoint($point) {
	@if $point == full {
		@media (min-width: 55em) {
			@content;
		}
	}
	@else if $point == tablet {
		@media (max-width: 55em) {
			@content;
		}
	}
	@else if $point == phone {
		@media (max-width: 45em) {
			@content;
		}
	}
	// http://mir.aculo.us/2012/11/28/the-ultimate-target-retina-screens-media-query/
	@else if $point == retina {
		@media
		(min--moz-device-pixel-ratio: 1.5),
		(-o-min-device-pixel-ratio: 3/2),
		(-webkit-min-device-pixel-ratio: 1.5),
		(min-device-pixel-ratio: 1.5),
		(min-resolution: 144dpi),
		(min-resolution: 1.5dppx) {
			@content;
		}
	}
}

/*********************
COLORS
*********************/

/*********************
SOCIAL COLORS - http://designpieces.com/2012/12/social-media-colours-hex-and-rgb/
*********************/
$twitter: #00aced;
$facebook: #3b5998;
$linkedin: #007bb6;
$google: #dd4b39;
$youtube: #b00;
$pinterest: #cb2027;
$tumblr: #32506d;
$flickr: #ff0084;
$instagram: #517fa4;
$vimeo: #aad450;
$foursquare: #0072b1;
$rss: #f60;

/*********************
BootStrap variables
*********************/
@import 'variables-bootstrap';

//override variables as needed
//** Background color for `<body>`.
$body-bg:               $gray_lighter;
$grid-gutter-width:         60px;
$grid-columns: 12;


/*********************
SIZES
*********************/
//Bootstrap grid column sizes:
// $col_content + $col_primary should equal $grid_columns
// $col_content_sidebar_wrap + $col_sidebar_secondary should equal $grid_columns

$col_content_of_screen : 6;
// Note: this size is for layouts with two sidebars.  Content width will larger if only one sidebar
$col_offset: 1; //zero => columns are flush to each other.

$page_padding: 10px;
// padding on the left and right of the full page

//assuming primary and sidebar are equal
$col_sidebar_secondary: ($grid-columns - $col_content_of_screen) / 2;
$col_content_sidebar_wrap: $col_content_of_screen + $col_sidebar_secondary; // add width of sidebar to wrap
//since content_sidebar_wrap is a nested row, we must compute it's size based on inside content_sidebar_wrap
$col_content: $col_content_of_screen * $grid-columns / $col_content_sidebar_wrap;
$col_sidebar_primary: $grid-columns - $col_content;
$col_offset_content_sidebar_wrap: 0;

@if $col_offset != 0 {

  // for layouts with two sidebars
   $col_sidebar_secondary: ($grid-columns - $col_content_of_screen - (2 * $col_offset)) / 2;
   $col_content_sidebar_wrap : $col_content_of_screen + $col_sidebar_secondary + $col_offset;
   $col_content : $col_content_of_screen * $grid-columns / $col_content_sidebar_wrap;
   // determine offset col inside content sidebar wrap
   $col_offset_content_sidebar_wrap : $col_offset * $grid-columns / $col_content_sidebar_wrap;
   $col_sidebar_primary: $grid-columns - $col_content - $col_offset_content_sidebar_wrap;

  //for layouts with only primary sidebar
  $col_sidebar_primary_single_sidebar : $col_sidebar_secondary;
  $col_content_single_sidebar : $grid-columns - $col_sidebar_secondary - $col_offset;
}


@debug "$col_sidebar_secondary is " $col_sidebar_secondary;
@debug "$col_content_sidebar_wrap is " $col_content_sidebar_wrap;
@debug "$col_content is " $col_content;
@debug "$col_offset_content_sidebar_wrap is " $col_offset_content_sidebar_wrap;
@debug "$col_sidebar_primary is " $col_sidebar_primary;

// Uncomment and add your own values to override above calculations:
//$col_sidebar_primary: 0;
//$col_sidebar_secondary: 0;
//$col_content_sidebar_wrap: 0;
//$col_content: 0;

$md_col_header_title: 8;
$md_col_header_widget: 4;

$siteWidth: 60em; // Useful for fixed width sites, as well as for limiting the max-width of fluid sites

$header_bg: #fff;
$content_bg: #fff;
$sidebar_bg: #fff;



